# FizzBuzz:

For numbers from 1 to 100:
        If the number is divisible by 3, print "Fizz".
        If it's divisible by 5, print "Buzz".
        If it's divisible by both, print "FizzBuzz".
        Otherwise, print the number.

for numbers in range(1,100):
    if numbers %5==0 and numbers %3 ==0:
        print('FizzBuzz')
    elif numbers %5 ==0:
        print('Buzz')
    elif numbers %3 ==0:
        print('Fizz')
    else:
        print(numbers)

# Number Guessing Game:

    The computer randomly selects a number between 1 and 100.
    The player tries to guess the number.
    After each guess, the computer should provide a hint like "Too High!" or "Too Low!".
    The game ends when the player guesses the number, or after a certain number of tries.

# Need revise overtime

import random
secret_number = random.randint(1,5)
attempt = 0
max_attempt = 3

while True:
    attempt += 1
    guess = int(input('Please enter a number'))
    
    if attempt == max_attempt:
        print('You lost, the secret number is:', secret_number)
        break
    elif guess== secret_number:
        print('Congrat! You got the sectret number')
        break
    elif guess > secret_number:
        print('Too High')
    elif guess < secret_number:
        print('Too low')
    
    

# Multiplication Table Generator:

    Ask the user for a number.
    Generate and display the multiplication table for that number using loops.

# Need revise overtime


num =int(input('Please provide a number:'))\

for i in range(1,11):
    product = num * i
    print(f"{num} * {i} = {product}")

# Simple Calculator:

    Continuously ask the user for two numbers and an operation (e.g., add, subtract, multiply, divide).
    Perform the operation and display the result.
    Keep going until the user decides to exit.

# Need little revise overtime


while True:
    
    try:
        a = int(input('Please provide the first number'))
        b = int(input('Please provide the second number'))
    except ValueError:
        print('Please enter a number')
        continue
    
    
    c = input('Please provide the operation (add,subtract,multiply,divide,exit)')
    if c == 'add':
        result = a + b
        print(f"{a}+{b}= {result}") 
    elif c == 'subtract':
        result = a-b
        print(f"{a}-{b}= {result}") 
    elif c == 'multiply':
        result = a*b
        print(f"{a}*{b}= {result}") 
    elif c == 'divide':
        try:
            result = a/b
            print(f"{a}/{b}= {result}") 
        except ZeroDivisionError:
            print('You cant divide by zero')
            continue
    elif c == 'exit':
        print('Goodbye')
        break

# Collatz Sequence:

    Ask the user for a number.
    Then, as long as the number is not 1:
        If the number is even, divide it by 2.
        If the number is odd, multiply it by 3 and add 1.
    Count the steps it takes to reach 1.

step = 0

while number !=1 :
    step += 1
    number = int(input('Provide a number'))
    if number %2 == 0:
        result = number // 2
    elif number %2 != 0:
        result = number*3+1
    print(result)
print(f"It took {step} steps to reach 1.")

# Simple Banking System:

    Allow a user to create an account with an initial deposit.
    Allow them to deposit, withdraw, and check the balance.
    Use loops to keep asking the user for the next operation until they decide to exit.

while True:
    try:
        initial_deposit =  float(input('Please provide an initial deposit'))
        break
    except ValueError:
        print('Please provide a number')

while True:
    action = input('How can I help you today? (deposit, withdraw, check,exit)')

    if action == 'deposit':
        money = float(input('Provide the amount of money to deposit'))
        initial_deposit = initial_deposit + money
        print('Here is the updated account',initial_deposit)
    elif action == 'withdraw':
        money = float(input('Provide the amount of money to withdraw'))
        if money > initial_deposit:
            print('Sorry you do not have enough money to withdraw')
            
        if money < initial_deposit:
            initial_deposit = initial_deposit - money
            print('Here is the updated account',initial_deposit)
    elif action == 'check':
        print('Here is the account',initial_deposit)
    elif action == 'exit':
        break

# Basic Shopping List:

    Allow the user to add, view, and remove items from a shopping list.
    Use loops to keep asking for the next operation until the user decides to end.




Initialize an empty shopping list.

while True:
    Ask the user for an action (add, view, remove, exit).
    
    if action is 'add':
        Get item from user.
        Append item to shopping list.

    elif action is 'view':
        For each item in the shopping list, print the item.

    elif action is 'remove':
        Get item from user.
        Try:
            Remove the item from shopping list.
        Except:
            Print an error message (e.g., "Item not found").

    elif action is 'exit':
        Print a goodbye message or final shopping list.
        Break out of the loop.

    else:
        Print an error message (e.g., "Invalid action").

shopping_list = []

while True:
    
    action = input('Please input action(add, view, remove, exit)').lower()
    
    if action =='add':
        item = input('Please type out the items to add')
        shopping_list.append(item)
        print('Item added:', item)
    elif action =='view':
        print(shopping_list)
        print(len(shopping_list))
    elif action =='remove':
        item_to_remove = input('Please type out item to remove')
        try:
            shopping_list.remove(item_to_remove)
            print(item_to_remove,'is removed from the list')
        except ValueError:
            print('Item not found')
    elif action == 'exit':
        if shopping_list:
            print('This is your shopping list:', shopping_list)
        else:
            print('Goodbye')
            break

